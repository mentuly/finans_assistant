from django.core.management.base import BaseCommand
from core.models import Category

class Command(BaseCommand):
    help = '–°—Ç–≤–æ—Ä—é—î –±–∞–∑–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–ª—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞'

    def handle(self, *args, **options):
        expense_categories = [
            '–á–∂–∞',
            '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', 
            '–ü–æ–∫—É–ø–∫–∏',
            '–Ü–Ω—à–µ'
        ]

        income_categories = [
            '–ó–∞—Ä–ø–ª–∞—Ç–∞',
            '–Ü–Ω—à–µ'
        ]

        created_count = 0

        for cat_name in expense_categories:
            category, created = Category.objects.get_or_create(
                name=cat_name,
                type='expense',
                defaults={'owner': None}
            )
            if created:
                self.stdout.write(
                    self.style.SUCCESS(f'‚úì –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –≤–∏—Ç—Ä–∞—Ç: {cat_name}')
                )
                created_count += 1
            else:
                self.stdout.write(
                    self.style.WARNING(f'‚ö† –ö–∞—Ç–µ–≥–æ—Ä—ñ—è –≤–∏—Ç—Ä–∞—Ç –≤–∂–µ —ñ—Å–Ω—É—î: {cat_name}')
                )

        for cat_name in income_categories:
            category, created = Category.objects.get_or_create(
                name=cat_name,
                type='income',
                defaults={'owner': None}
            )
            if created:
                self.stdout.write(
                    self.style.SUCCESS(f'‚úì –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–æ—Ö–æ–¥—ñ–≤: {cat_name}')
                )
                created_count += 1
            else:
                self.stdout.write(
                    self.style.WARNING(f'‚ö† –ö–∞—Ç–µ–≥–æ—Ä—ñ—è –¥–æ—Ö–æ–¥—ñ–≤ –≤–∂–µ —ñ—Å–Ω—É—î: {cat_name}')
                )

        self.stdout.write(
            self.style.SUCCESS(f'\nüéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –°—Ç–≤–æ—Ä–µ–Ω–æ {created_count} –Ω–æ–≤–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π.')
        )
        
        self.stdout.write('\nüìã –í—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó:')
        for cat in Category.objects.all().order_by('type', 'name'):
            icon = 'üí∏' if cat.type == 'expense' else 'üí∞'
            self.stdout.write(f'  {icon} {cat.name} ({cat.get_type_display()})')
